name: Integration Tests for Metastore

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  wait-for-revision:
    runs-on: ubuntu-latest
    steps:
      - name: Get commit ID
        run: echo "COMMIT_ID=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - name: Wait for Matching Revision
        run: |
          MAX_RETRIES=30  # Set maximum number of retries
          SLEEP_TIME=10  # Time in seconds between retries

          for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Checking API for matching commit ID..."

              REVISION=$(curl --silent --location 'https://gcpotel.atlan.com/api/meta/admin/version' \
                --header "Authorization: Bearer $(curl --silent --location 'https://gcpotel.atlan.com/auth/realms/default/protocol/openid-connect/token' \
                  --header 'Content-Type: application/x-www-form-urlencoded' \
                  --data-urlencode 'client_id=atlan-argo' \
                  --data-urlencode 'grant_type=client_credentials' \
                  --data-urlencode "client_secret=${{ secrets.ATLAN_CLIENT_SECRET }}" | jq -r '.access_token')" | jq -r '.Revision' | cut -c1-7)

              echo "Fetched Revision: $REVISION"
              echo "Expected Commit ID: $COMMIT_ID"

              if [[ "$REVISION" == "$COMMIT_ID" ]]; then
                  echo "✅ Revision matches commit ID! Proceeding to the next step..."
                  exit 0
              fi

              echo "🔄 No match yet. Retrying in $SLEEP_TIME seconds..."
              sleep $SLEEP_TIME
          done

          echo "❌ ERROR: Max retries reached. Commit ID did not match the revision."
          exit 1

  run-integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Java SDK Repo
        uses: actions/checkout@v4
        with:
          repository: atlanhq/atlan-java
          ref: main

      - name: Set up JDK for SDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Compile
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: assemble shadowJar test

  list-integration-tests:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.test-files.outputs.tests }}
    steps:
      - name: Checkout Java SDK Repo
        uses: actions/checkout@v4
        with:
          repository: atlanhq/atlan-java
          ref: main

      - name: List integration tests
        id: test-files
        run: |
          tests=$(ls integration-tests/src/test/java/com/atlan/java/sdk/*Test.java | sed -E 's|.*/src/test/java/com/atlan/java/sdk/||; s|/|.|g; s|\.java$||' | tr '\n' ' ')
          json_tests=$(echo "$tests[@]}" | jq -R -c 'split(" ")[:-1]')
          echo "tests=$json_tests" >> $GITHUB_OUTPUT
  integration-test:
    needs:
      - run-integration-tests
      - list-integration-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tests: ${{ fromJson(needs.list-integration-tests.outputs.tests) }}
    concurrency:
      group: ${{ matrix.tests }}
    name: "Integration"
    steps:
      - name: Checkout Java SDK Repo
        uses: actions/checkout@v4
        with:
          repository: atlanhq/atlan-java
          ref: main

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Integration tests
        uses: burrunan/gradle-cache-action@v1
        env:
            ATLAN_BASE_URL: "https://gcpotel.atlan.com/"
            ATLAN_API_KEY: ${{ secrets.TENANT_API_KEY }}
        with:
          arguments: -PintegrationTests integration-tests:test --tests "com.atlan.java.sdk.${{ matrix.tests }}"

      - if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.tests }}
          path: integration-tests/${{ matrix.tests }}.log


